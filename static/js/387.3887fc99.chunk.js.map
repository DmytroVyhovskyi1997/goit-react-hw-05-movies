{"version":3,"file":"static/js/387.3887fc99.chunk.js","mappings":"+RAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,4CAEHC,EAAgB,WACzB,OAAOF,EAAAA,EAAAA,GAAM,sBAAD,OAAuBC,IAClCE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,OAAb,GACV,EAIYC,EAAc,SAAAC,GACzB,OAAOR,EAAAA,EAAAA,GAAM,gBAAD,OAAiBC,EAAjB,kBAAkCO,IAC7CL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,OAAb,GACV,EAEYG,EAAkB,SAAAC,GAC7B,OAAOV,EAAAA,EAAAA,GAAM,UAAD,OAAWU,GAAX,OAAqBT,EAArB,2BACTE,MAAK,SAAAC,GACJ,MAAuCA,EAAIC,KAAnCM,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,cACfC,EAAU,sCACVC,EAASH,EAAW,UAAME,GAAN,OAAgBF,GAAhB,UAAmCE,GAAnC,OAA6CD,GACvE,OAAO,kBAAKR,EAAIC,MAAhB,IAAsBS,OAAAA,GACvB,GACJ,EAEYC,EAAY,SAAAL,GACvB,OAAOV,EAAAA,EAAAA,GAAM,UAAD,OAAWU,EAAX,mBAA6BT,EAA7B,oBACTE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKW,KAAKC,KAAI,SAAAC,GAAM,MAAK,CACxCC,GAAGD,EAAOC,GACVC,KAAMF,EAAOE,KACbC,aAAcH,EAAOG,aACrBC,UAAWJ,EAAOI,UAJiB,GAA5B,GAMZ,EAEYC,EAAe,SAAAb,GAC1B,OAAOV,EAAAA,EAAAA,GAAM,UAAD,OAAWU,EAAX,mBAA6BT,EAA7B,oBACTE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,QAAQW,KAAI,SAAAO,GAAM,MAAK,CAC3CL,GAAGK,EAAOL,GACVM,OAAQD,EAAOC,OACfC,QAASF,EAAOE,QAHsB,GAA/B,GAKZ,C,2HC1CUC,E,QAAgBC,GAAAA,IAAH,+D,mBC0C1B,EAtCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQrB,GAAYsB,EAAAA,EAAAA,MAAZtB,QAQR,OANAuB,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAab,GACVP,MAAK,SAAAC,GAAG,OAAI2B,EAAW3B,EAAf,IACR8B,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACzB,IAECoB,GASH,8BACGA,EAAQQ,OAAS,EAChBR,EAAQb,KAAI,gBAAGE,EAAH,EAAGA,GAAIM,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,SAACC,EAAD,WACE,4BACE,0BACE,sCADF,IACwBF,MAExB,uBAAIC,MAJIP,IAFF,KAWZ,kFApBF,wBACE,SAACoB,EAAA,EAAD,KAuBP,C","sources":["Api/fetchMovies.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=9a450fbd652c62e887bc78d79e7a75f2';\n\nexport const fetchTrending = () => {\n    return axios(`/trending/movie/day${API_KEY}`)\n    .then(res => res.data.results)\n  };\n\n\n\n  export const fetchMovies = searchValue => {\n    return axios(`/search/movie${API_KEY}&query=${searchValue}`)\n    .then(res => res.data.results)\n  }\n\n  export const getMovieDetails = movieId => {\n    return axios(`/movie/${movieId}${API_KEY}&page=1&language=en-US`)\n      .then(res => {\n        const { poster_path, backdrop_path } = res.data;\n        const baseUrl = 'https://image.tmdb.org/t/p/original';\n        const imgUrl = poster_path ? `${baseUrl}${poster_path}` : `${baseUrl}${backdrop_path}`;\n        return { ...res.data, imgUrl };\n      });\n  };\n  \n  export const fetchCast = movieId => {\n    return axios(`/movie/${movieId}/credits${API_KEY}&language=en-US`)\n      .then(res => res.data.cast.map(member => ({\n        id:member.id,\n        name: member.name,\n        profile_path: member.profile_path,\n        character: member.character,\n      })))\n  }\n  \n  export const fetchReviews = movieId => {\n    return axios(`/movie/${movieId}/reviews${API_KEY}&language=en-US`)\n      .then(res => res.data.results.map(review => ({\n        id:review.id,\n        author: review.author,\n        content: review.content\n      })))\n  }\n  \n  ","import styled from 'styled-components';\n\nexport const StyledReviews = styled.div`\n  span {\n    font-weight: bold;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../Api/fetchMovies';\nimport { StyledReviews } from './Reviews.styled';\nimport { Loader } from '../Loader/Loader';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchReviews(movieId)\n      .then(res => setReviews(res))\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  if (!reviews) {\n    return (\n      <p>\n        <Loader />\n      </p>\n    );\n  }\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        reviews.map(({ id, author, content }) => (\n          <StyledReviews>\n            <div key={id}>\n              <p>\n                <span>Author:</span> {author}\n              </p>\n              <p>{content}</p>\n            </div>\n          </StyledReviews>\n        ))\n      ) : (\n        <b>Sorry, we couldn't find any reviews for this movie.</b>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","API_KEY","fetchTrending","then","res","data","results","fetchMovies","searchValue","getMovieDetails","movieId","poster_path","backdrop_path","baseUrl","imgUrl","fetchCast","cast","map","member","id","name","profile_path","character","fetchReviews","review","author","content","StyledReviews","styled","useState","reviews","setReviews","useParams","useEffect","catch","err","console","log","length","Loader"],"sourceRoot":""}