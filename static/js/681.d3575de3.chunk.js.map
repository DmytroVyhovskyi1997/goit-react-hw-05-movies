{"version":3,"file":"static/js/681.d3575de3.chunk.js","mappings":"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","sources":["Api/fetchMovies.js","components/MovieInformation/MovieInformation.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=9a450fbd652c62e887bc78d79e7a75f2';\n\nexport const fetchTrending = () => {\n    return axios(`/trending/movie/day${API_KEY}`)\n    .then(res => res.data.results)\n  };\n\n\n\n  export const fetchMovies = searchValue => {\n    return axios(`/search/movie${API_KEY}&query=${searchValue}`)\n    .then(res => res.data.results)\n  }\n\n  export const getMovieDetails = movieId => {\n    return axios(`/movie/${movieId}${API_KEY}&page=1&language=en-US`)\n      .then(res => {\n        const { poster_path, backdrop_path } = res.data;\n        const baseUrl = 'https://image.tmdb.org/t/p/original';\n        const imgUrl = poster_path ? `${baseUrl}${poster_path}` : `${baseUrl}${backdrop_path}`;\n        return { ...res.data, imgUrl };\n      });\n  };\n  \n  export const fetchCast = movieId => {\n    return axios(`/movie/${movieId}/credits${API_KEY}&language=en-US`)\n      .then(res => res.data.cast.map(member => ({\n        id:member.id,\n        name: member.name,\n        profile_path: member.profile_path,\n        character: member.character,\n      })))\n  }\n  \n  export const fetchReviews = movieId => {\n    return axios(`/movie/${movieId}/reviews${API_KEY}&language=en-US`)\n      .then(res => res.data.results.map(review => ({\n        id:review.id,\n        author: review.author,\n        content: review.content\n      })))\n  }\n  \n  ","\nimport { NavLink, useLocation,  } from \"react-router-dom\";\nimport { Suspense,  } from \"react\";\n\n\n\n\n\nconst MovieInformation = ({movie, children}) =>{\n    const location = useLocation();\n    const prevLocation = location.state?.from;\n \n    return(\n        <main>\n      \n     \n        <div>\n          <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.title} />\n          <h1>{movie.title}</h1>\n          <p>User score: {movie.vote_average * 10}%</p>\n          <p>{movie.overview}</p>\n          <p>Release date: {movie.release_date}</p>\n          <p>Rating: {movie.vote_average}</p>\n          <p>Genres: {movie.genres.map(genre => genre.name).join(', ')}</p>\n        </div>\n   \n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <NavLink to=\"cast\" state={{ from: prevLocation }}>\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\" state={{ from: prevLocation }}>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n        <Suspense fallback={<p>Loading...</p>}>{children}</Suspense>\n    </main>\n    )\n}\n\nexport default MovieInformation ;","import { useState, useEffect } from \"react\";\nimport { getMovieDetails } from \"../Api/fetchMovies\";\nimport MovieInformation from '../components/MovieInformation/MovieInformation'\nimport { useParams, Link, useLocation, Outlet  } from \"react-router-dom\";\n// import Home from '../pages/Home'\n// const Cast = lazy(() => import('../components/Cast/Cast'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/\";\n\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(res => setMovie(res))\n      .catch(err => console.log(err.message));\n  }, [movieId]);\n\n  return(\n    <>\n       <Link to={backLinkHref}>Go back</Link>\n       {movie && (\n      <MovieInformation movie={movie}>\n        <Outlet/>\n      </MovieInformation>\n       )}\n    </>\n  );\n  \n};\n\nexport default MovieDetails;\n\n\n\n"],"names":["axios","API_KEY","fetchTrending","then","res","data","results","fetchMovies","searchValue","getMovieDetails","movieId","poster_path","backdrop_path","baseUrl","imgUrl","fetchCast","cast","map","member","id","name","profile_path","character","fetchReviews","review","author","content","movie","children","prevLocation","useLocation","state","from","src","alt","title","vote_average","overview","release_date","genres","genre","join","to","Suspense","fallback","useParams","useState","setMovie","backLinkHref","useEffect","catch","err","console","log","message"],"sourceRoot":""}