{"version":3,"file":"static/js/415.943dec83.chunk.js","mappings":"+RAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,4CAEHC,EAAgB,WACzB,OAAOF,EAAAA,EAAAA,GAAM,sBAAD,OAAuBC,IAClCE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,OAAb,GACV,EAIYC,EAAc,SAAAC,GACzB,OAAOR,EAAAA,EAAAA,GAAM,gBAAD,OAAiBC,EAAjB,kBAAkCO,IAC7CL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,OAAb,GACV,EAEYG,EAAkB,SAAAC,GAC7B,OAAOV,EAAAA,EAAAA,GAAM,UAAD,OAAWU,GAAX,OAAqBT,EAArB,2BACTE,MAAK,SAAAC,GACJ,MAAuCA,EAAIC,KAAnCM,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,cACfC,EAAU,sCACVC,EAASH,EAAW,UAAME,GAAN,OAAgBF,GAAhB,UAAmCE,GAAnC,OAA6CD,GACvE,OAAO,kBAAKR,EAAIC,MAAhB,IAAsBS,OAAAA,GACvB,GACJ,EAEYC,EAAY,SAAAL,GACvB,OAAOV,EAAAA,EAAAA,GAAM,UAAD,OAAWU,EAAX,mBAA6BT,EAA7B,oBACTE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKW,KAAKC,KAAI,SAAAC,GAAM,MAAK,CACxCC,GAAGD,EAAOC,GACVC,KAAMF,EAAOE,KACbC,aAAcH,EAAOG,aACrBC,UAAWJ,EAAOI,UAJiB,GAA5B,GAMZ,EAEYC,EAAe,SAAAb,GAC1B,OAAOV,EAAAA,EAAAA,GAAM,UAAD,OAAWU,EAAX,mBAA6BT,EAA7B,oBACTE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,QAAQW,KAAI,SAAAO,GAAM,MAAK,CAC3CL,GAAGK,EAAOL,GACVM,OAAQD,EAAOC,OACfC,QAASF,EAAOE,QAHsB,GAA/B,GAKZ,C,4FC1CUC,EAAWC,EAAAA,GAAAA,GAAH,wQAiBRC,EAAWD,EAAAA,GAAAA,GAAH,uC,SCKrB,EApBkB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACnB,OACE,SAACD,EAAD,WACE,SAACF,EAAD,UACGG,EAAOb,KAAI,SAAAc,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAMZ,IAA3B,SAAkCY,EAAME,SADjCF,EAAMZ,GAIlB,OAIR,C,mFCED,UAhBa,WACX,OAA4Be,EAAAA,EAAAA,UAAS,IAArC,eAAOJ,EAAP,KAAeK,EAAf,KAOA,OALAC,EAAAA,EAAAA,YAAU,YACRlC,EAAAA,EAAAA,MACGC,MAAK,SAAA2B,GAAM,OAAIK,EAAUL,EAAd,IACXO,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,GACf,GAAE,KAED,iCACE,2CACCX,EAAOY,OAAS,IAAK,SAAC,IAAD,CAAWZ,OAAQA,MAG9C,C","sources":["Api/fetchMovies.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=9a450fbd652c62e887bc78d79e7a75f2';\n\nexport const fetchTrending = () => {\n    return axios(`/trending/movie/day${API_KEY}`)\n    .then(res => res.data.results)\n  };\n\n\n\n  export const fetchMovies = searchValue => {\n    return axios(`/search/movie${API_KEY}&query=${searchValue}`)\n    .then(res => res.data.results)\n  }\n\n  export const getMovieDetails = movieId => {\n    return axios(`/movie/${movieId}${API_KEY}&page=1&language=en-US`)\n      .then(res => {\n        const { poster_path, backdrop_path } = res.data;\n        const baseUrl = 'https://image.tmdb.org/t/p/original';\n        const imgUrl = poster_path ? `${baseUrl}${poster_path}` : `${baseUrl}${backdrop_path}`;\n        return { ...res.data, imgUrl };\n      });\n  };\n  \n  export const fetchCast = movieId => {\n    return axios(`/movie/${movieId}/credits${API_KEY}&language=en-US`)\n      .then(res => res.data.cast.map(member => ({\n        id:member.id,\n        name: member.name,\n        profile_path: member.profile_path,\n        character: member.character,\n      })))\n  }\n  \n  export const fetchReviews = movieId => {\n    return axios(`/movie/${movieId}/reviews${API_KEY}&language=en-US`)\n      .then(res => res.data.results.map(review => ({\n        id:review.id,\n        author: review.author,\n        content: review.content\n      })))\n  }\n  \n  ","import styled from 'styled-components';\n\nexport const StyledLi = styled.li`\n  margin-top: 20px;\n  padding: 30px 50px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  font-weight: 500;\n  font-size: 20px;\n  list-style: decimal;\n  a {\n    color: black;\n  }\n  a:hover {\n    color: orangered;\n  }\n`;\n\nexport const StyledUl = styled.ul`\n  padding: 0;\n`;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { StyledUl, StyledLi } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <StyledUl>\n      <StyledLi>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n            </li>\n          );\n        })}\n      </StyledLi>\n    </StyledUl>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default MovieList;\n","import { useState, useEffect } from 'react';\nimport { fetchTrending } from '../Api/fetchMovies';\nimport MovieList from '../components/MovieList/MovieList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrending()\n      .then(movies => setMovies(movies))\n      .catch(error => console.log(error.message));\n  }, []);\n  return (\n    <>\n      <h1>Trending today</h1>\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["axios","API_KEY","fetchTrending","then","res","data","results","fetchMovies","searchValue","getMovieDetails","movieId","poster_path","backdrop_path","baseUrl","imgUrl","fetchCast","cast","map","member","id","name","profile_path","character","fetchReviews","review","author","content","StyledLi","styled","StyledUl","movies","movie","to","title","useState","setMovies","useEffect","catch","error","console","log","message","length"],"sourceRoot":""}